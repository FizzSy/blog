(window.webpackJsonp=window.webpackJsonp||[]).push([[24],{488:function(t,s,a){"use strict";a.r(s);var e=a(25),n=Object(e.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"vue3"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#vue3"}},[t._v("#")]),t._v(" Vue3")]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("简介")]),t._v(" "),a("p",[t._v('Vue.js 3.0 "One Piece" 正式版在今年 9 月份发布，历经 2 年多开发, 100+位贡献者, 2600+次提交, 600+次 PR，Vue3 支持 vue2 的大多数特性，更好的支持 Typescript')])]),t._v(" "),a("h2",{attrs:{id:"_1、认识-vue3"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1、认识-vue3"}},[t._v("#")]),t._v(" 1、认识 Vue3")]),t._v(" "),a("h3",{attrs:{id:"_1、了解相关信息"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1、了解相关信息"}},[t._v("#")]),t._v(" 1、了解相关信息")]),t._v(" "),a("ul",[a("li",[t._v('Vue.js 3.0 "One Piece" 正式版在今年 9 月份发布')]),t._v(" "),a("li",[t._v("Vue.js")]),t._v(" "),a("li",[t._v("Vue.js Vue3 支持 vue2 的大多数特性")]),t._v(" "),a("li",[t._v("Vue.js")])]),t._v(" "),a("h3",{attrs:{id:"_1、性能提升"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1、性能提升"}},[t._v("#")]),t._v(" 1、性能提升")]),t._v(" "),a("ul",[a("li",[t._v("打包大小减少 41%")]),t._v(" "),a("li",[t._v("初次渲染快 55%, 更新渲染快 133%")]),t._v(" "),a("li",[t._v("内存减少 54%")]),t._v(" "),a("li",[t._v("使用 Proxy 代替 defineProperty 实现数据响应式")]),t._v(" "),a("li",[t._v("重写虚拟 DOM 的实现和 Tree-Shaking")])]),t._v(" "),a("h3",{attrs:{id:"_2、新增特性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2、新增特性"}},[t._v("#")]),t._v(" 2、新增特性")]),t._v(" "),a("ul",[a("li",[t._v("Composition (组合) API")]),t._v(" "),a("li",[t._v("setup\n"),a("ul",[a("li",[t._v("ref 和 reactive")]),t._v(" "),a("li",[t._v("computed 和 watch")]),t._v(" "),a("li",[t._v("新的生命周期函数")]),t._v(" "),a("li",[t._v("provide 与 inject")])])]),t._v(" "),a("li",[t._v("新组件\n"),a("ul",[a("li",[t._v("Fragment - 文档碎片")]),t._v(" "),a("li",[t._v("Teleport - 瞬移组件的位置")]),t._v(" "),a("li",[t._v("Suspense - 异步加载组件的 loading 界面")])])]),t._v(" "),a("li",[t._v("其它 API 更新\n"),a("ul",[a("li",[t._v("全局 API 的修改")]),t._v(" "),a("li",[t._v("将原来的全局 API 转移到应用对象")]),t._v(" "),a("li",[t._v("模板语法变化")])])])]),t._v(" "),a("h2",{attrs:{id:"_2、创建-vue3-项目"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2、创建-vue3-项目"}},[t._v("#")]),t._v(" 2、创建 Vue3 项目")]),t._v(" "),a("ul",[a("li",[t._v("文档: https://cli.vuejs.org/zh/guide/creating-a-project.html#vue-create")])]),t._v(" "),a("h3",{attrs:{id:"_1、使用-vue-cli-创建"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1、使用-vue-cli-创建"}},[t._v("#")]),t._v(" 1、使用 vue-cli 创建")]),t._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("安装或者升级\nnpm install -g @vue/cli\n保证 vue cli 版本在 4.5.0 以上\nvue --version\n创建项目\nvue create my-project\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br")])]),a("h3",{attrs:{id:"_2、使用-vite-创建"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2、使用-vite-创建"}},[t._v("#")]),t._v(" 2、使用 vite 创建")]),t._v(" "),a("ul",[a("li",[t._v("文档: https://v3.cn.vuejs.org/guide/installation.html")]),t._v(" "),a("li",[t._v("vite 是一个由原生 ESM 驱动的 Web 开发构建工具。在开发环境下基于浏览器原生 ES imports 开发")]),t._v(" "),a("li",[t._v("它做到了本地快速开发启动, 在生产环境下基于 Rollup 打包。\n"),a("ul",[a("li",[t._v("快速的冷启动，不需要等待打包操作")]),t._v(" "),a("li",[t._v("即时的热模块更新，替换性能和模块数量的解耦让更新飞起")]),t._v(" "),a("li",[t._v("真正的按需编译，不再等待整个应用编译完成，这是一个巨大的改变")])])])]),t._v(" "),a("h2",{attrs:{id:"_3、composition-api-常用部分"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3、composition-api-常用部分"}},[t._v("#")]),t._v(" 3、Composition API(常用部分)")]),t._v(" "),a("h3",{attrs:{id:"_1、setup"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1、setup"}},[t._v("#")]),t._v(" 1、setup")]),t._v(" "),a("ul",[a("li",[t._v("新的 option, 所有的组合 API 函数都在此使用, 只在初始化时执行一次")]),t._v(" "),a("li",[t._v("函数如果返回对象, 对象中的属性或方法, 模板中可以直接使用")])]),t._v(" "),a("h3",{attrs:{id:"_2、ref"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2、ref"}},[t._v("#")]),t._v(" 2、ref")]),t._v(" "),a("ul",[a("li",[t._v("作用: 定义一个数据的响应式")]),t._v(" "),a("li",[t._v("语法: const xxx = ref(initValue)\n"),a("ul",[a("li",[t._v("创建一个包含响应式数据的引用(reference)对象")]),t._v(" "),a("li",[t._v("js 中操作数据: xxx.value")]),t._v(" "),a("li",[t._v("模板中操作数据: 不需要.value")])])]),t._v(" "),a("li",[t._v("一般用来定义一个基本类型的响应式数据")])]),t._v(" "),a("h3",{attrs:{id:"_3、reactive"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3、reactive"}},[t._v("#")]),t._v(" 3、reactive")]),t._v(" "),a("ul",[a("li",[t._v("作用: 定义多个数据的响应式")]),t._v(" "),a("li",[t._v("const proxy = reactive(obj): 接收一个普通对象然后返回该普通对象的响应式代理器对象")]),t._v(" "),a("li",[t._v("响应式转换是“深层的”：会影响对象内部所有嵌套的属性")]),t._v(" "),a("li",[t._v("内部基于 ES6 的 Proxy 实现，通过代理对象操作源对象内部数据都是响应式的")])]),t._v(" "),a("h3",{attrs:{id:"_4、比较-vue2-与-vue3-的响应式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4、比较-vue2-与-vue3-的响应式"}},[t._v("#")]),t._v(" 4、比较 Vue2 与 Vue3 的响应式")]),t._v(" "),a("h4",{attrs:{id:"_4-1、vue2-的响应式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-1、vue2-的响应式"}},[t._v("#")]),t._v(" 4.1、vue2 的响应式")]),t._v(" "),a("ul",[a("li",[t._v("核心\n"),a("ul",[a("li",[t._v("对象: 通过 defineProperty 对对象的已有属性值的读取和修改进行劫持(监视/拦截)")]),t._v(" "),a("li",[t._v("数组: 通过重写数组更新数组一系列更新元素的方法来实现元素修改的劫持")])])])]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("Object"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("defineProperty")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("data"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"count"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("get")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("set")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br")])]),a("ul",[a("li",[a("p",[t._v("问题")]),t._v(" "),a("ul",[a("li",[t._v("对象直接新添加的属性或删除已有属性, 界面不会自动更新")]),t._v(" "),a("li",[t._v("直接通过下标替换元素或更新 length, 界面不会自动更新 arr[1] = {}")])])])]),t._v(" "),a("h4",{attrs:{id:"_4-2、vue3-的响应式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-2、vue3-的响应式"}},[t._v("#")]),t._v(" 4.2、vue3 的响应式")]),t._v(" "),a("ul",[a("li",[t._v("核心\n"),a("ul",[a("li",[t._v("通过 Proxy(代理): 拦截对 data 任意属性的任意(13 种)操作, 包括属性值的读写, 属性的添加, 属性的删除等...")]),t._v(" "),a("li",[t._v("通过 Reflect(反射): 动态对被代理对象的相应属性进行特定的操作")])])])]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Proxy")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("data"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 拦截读取属性值")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("get")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("target"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" prop"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" Reflect"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("get")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("target"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" prop"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 拦截设置属性值或添加新属性")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("set")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("target"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" prop"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" value"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" Reflect"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("set")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("target"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" prop"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" value"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 拦截删除属性")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("deleteProperty")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("target"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" prop")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" Reflect"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("deleteProperty")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("target"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" prop"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br")])]),a("h3",{attrs:{id:"_5、setup-细节"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5、setup-细节"}},[t._v("#")]),t._v(" 5、setup 细节")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("setup 执行的时机")]),t._v(" "),a("ul",[a("li",[t._v("在 beforeCreate 之前执行(一次), 此时组件对象还没有创建")]),t._v(" "),a("li",[t._v("this 是 undefined, 不能通过 this 来访问 data/computed/methods / props")]),t._v(" "),a("li",[t._v("其实所有的 composition API 相关回调函数中也都不可以")])])]),t._v(" "),a("li",[a("p",[t._v("setup 的返回值")]),t._v(" "),a("ul",[a("li",[t._v("一般都返回一个对象: 为模板提供数据, 也就是模板中可以直接使用此对象中的所有属性/方法")]),t._v(" "),a("li",[t._v("返回对象中的属性会与 data 函数返回对象的属性合并成为组件对象的属性")]),t._v(" "),a("li",[t._v("返回对象中的方法会与 methods 中的方法合并成功组件对象的方法")]),t._v(" "),a("li",[t._v("如果有重名, setup 优先")]),t._v(" "),a("li",[t._v("一般不要混合使用: methods 中可以访问 setup 提供的属性和方法, 但在 setup 方法中不能访问 data 和 methods")]),t._v(" "),a("li",[t._v("setup 不能是一个 async 函数: 因为返回值不再是 return 的对象, 而是 promise, 模板看不到 return 对象中的属性数据")])])]),t._v(" "),a("li",[a("p",[t._v("setup 的参数")]),t._v(" "),a("ul",[a("li",[t._v("setup(props, context) / setup(props, {attrs, slots, emit})")]),t._v(" "),a("li",[t._v("props: 包含 props 配置声明且传入了的所有属性的对象")]),t._v(" "),a("li",[t._v("attrs: 包含没有在 props 配置中声明的属性的对象, 相当于 this.$attrs")]),t._v(" "),a("li",[t._v("slots: 包含所有传入的插槽内容的对象, 相当于 this.$slots")]),t._v(" "),a("li",[t._v("emit: 用来分发自定义事件的函数, 相当于 this.$emit")])])])]),t._v(" "),a("h3",{attrs:{id:"_6、setup-细节"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6、setup-细节"}},[t._v("#")]),t._v(" 6、setup 细节")]),t._v(" "),a("ul",[a("li",[t._v("是 Vue3 的 composition API 中 2 个最重要的响应式 API")]),t._v(" "),a("li",[t._v("ref 用来处理基本类型数据, reactive 用来处理对象(递归深度响应式)")]),t._v(" "),a("li",[t._v("如果用 ref 对象/数组, 内部会自动将对象/数组转换为 reactive 的代理对象")]),t._v(" "),a("li",[t._v("ref 内部: 通过给 value 属性添加 getter/setter 来实现对数据的劫持")]),t._v(" "),a("li",[t._v("reactive 内部: 通过使用 Proxy 来实现对对象内部所有数据的劫持, 并通过 Reflect 操作对象内部数据")]),t._v(" "),a("li",[t._v("ref 的数据操作: 在 js 中要.value, 在模板中不需要(内部解析模板时会自动添加.value)")])]),t._v(" "),a("h3",{attrs:{id:"_7、setup-细节"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_7、setup-细节"}},[t._v("#")]),t._v(" 7、setup 细节")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("computed 函数:")]),t._v(" "),a("ul",[a("li",[t._v("与 computed 配置功能一致")]),t._v(" "),a("li",[t._v("只有 getter")]),t._v(" "),a("li",[t._v("有 getter 和 setter")])])]),t._v(" "),a("li",[a("p",[t._v("watch 函数")]),t._v(" "),a("ul",[a("li",[t._v("与 watch 配置功能一致")]),t._v(" "),a("li",[t._v("监视指定的一个或多个响应式数据, 一旦数据变化, 就自动执行监视回调")]),t._v(" "),a("li",[t._v("默认初始时不执行回调, 但可以通过配置 immediate 为 true, 来指定初始时立即执行第一次")]),t._v(" "),a("li",[t._v("通过配置 deep 为 true, 来指定深度监视")])])]),t._v(" "),a("li",[a("p",[t._v("watchEffect 函数")]),t._v(" "),a("ul",[a("li",[t._v("不用直接指定要监视的数据, 回调函数中使用的哪些响应式数据就监视哪些响应式数据")]),t._v(" "),a("li",[t._v("默认初始时就会执行第一次, 从而可以收集需要监视的数据")]),t._v(" "),a("li",[t._v("监视数据发生变化时回调")])])])]),t._v(" "),a("h3",{attrs:{id:"_8、生命周期"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_8、生命周期"}},[t._v("#")]),t._v(" 8、生命周期")]),t._v(" "),a("h4",{attrs:{id:"_8-1、与-2-x-版本生命周期相对应的组合式-api"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_8-1、与-2-x-版本生命周期相对应的组合式-api"}},[t._v("#")]),t._v(" 8.1、与 2.x 版本生命周期相对应的组合式 API")]),t._v(" "),a("ul",[a("li",[t._v("beforeCreate -> 使用 setup()")]),t._v(" "),a("li",[t._v("created -> 使用 setup()")]),t._v(" "),a("li",[t._v("beforeMount -> onBeforeMount")]),t._v(" "),a("li",[t._v("mounted -> onMounted")]),t._v(" "),a("li",[t._v("beforeUpdate -> onBeforeUpdate")]),t._v(" "),a("li",[t._v("updated -> onUpdated")]),t._v(" "),a("li",[t._v("beforeDestroy -> onBeforeUnmount")]),t._v(" "),a("li",[t._v("destroyed -> onUnmounted")]),t._v(" "),a("li",[t._v("errorCaptured -> onErrorCaptured")])]),t._v(" "),a("h4",{attrs:{id:"_8-2、新增的钩子函数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_8-2、新增的钩子函数"}},[t._v("#")]),t._v(" 8.2、新增的钩子函数")]),t._v(" "),a("ul",[a("li",[t._v("onRenderTracked")]),t._v(" "),a("li",[t._v("onRenderTriggered")])]),t._v(" "),a("h3",{attrs:{id:"_9、自定义-hook-函数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_9、自定义-hook-函数"}},[t._v("#")]),t._v(" 9、自定义 hook 函数")]),t._v(" "),a("ul",[a("li",[t._v("使用 Vue3 的组合 API 封装的可复用的功能函数")]),t._v(" "),a("li",[t._v("自定义 hook 的作用类似于 vue2 中的 mixin 技术")]),t._v(" "),a("li",[t._v("自定义 Hook 的优势: 很清楚复用功能代码的来源, 更清楚易懂")])]),t._v(" "),a("h3",{attrs:{id:"_10、torefs"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_10、torefs"}},[t._v("#")]),t._v(" 10、toRefs")]),t._v(" "),a("ul",[a("li",[t._v("把一个响应式对象转换成普通对象，该普通对象的每个 property 都是一个 ref")]),t._v(" "),a("li",[t._v("应用: 当从合成函数返回响应式对象时，toRefs 非常有用，这样消费组件就可以在不丢失响应式的情况下对返回的对象进行分解使用")]),t._v(" "),a("li",[t._v("问题: reactive 对象取出的所有属性值都是非响应式的")]),t._v(" "),a("li",[t._v("解决: 利用 toRefs 可以将一个响应式 reactive 对象的所有原始属性转换为响应式的 ref 属性")])]),t._v(" "),a("h2",{attrs:{id:"_4、其它新组合和-api"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4、其它新组合和-api"}},[t._v("#")]),t._v(" 4、其它新组合和 API")]),t._v(" "),a("h3",{attrs:{id:"_1、fragment-片断"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1、fragment-片断"}},[t._v("#")]),t._v(" 1、Fragment(片断)")]),t._v(" "),a("ul",[a("li",[t._v("在 Vue2 中: 组件必须有一个根标签")]),t._v(" "),a("li",[t._v("在 Vue3 中: 组件可以没有根标签, 内部会将多个标签包含在一个 Fragment 虚拟元素中")]),t._v(" "),a("li",[t._v("好处: 减少标签层级, 减小内存占用")])]),t._v(" "),a("h3",{attrs:{id:"_2、teleport-瞬移"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2、teleport-瞬移"}},[t._v("#")]),t._v(" 2、Teleport(瞬移)")]),t._v(" "),a("ul",[a("li",[t._v("Teleport 提供了一种干净的方法, 让组件的 html 在父组件界面外的特定标签(很可能是 body)下插入显示")])]),t._v(" "),a("h3",{attrs:{id:"_3、suspense-不确定的"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3、suspense-不确定的"}},[t._v("#")]),t._v(" 3、Suspense(不确定的)")]),t._v(" "),a("ul",[a("li",[t._v("它们允许我们的应用程序在等待异步组件时渲染一些后备内容，可以让我们创建一个平滑的用户体验")])])])}),[],!1,null,null,null);s.default=n.exports}}]);